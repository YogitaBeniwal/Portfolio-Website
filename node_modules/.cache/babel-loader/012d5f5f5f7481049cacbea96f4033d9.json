{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Portfolio\\\\src\\\\containers\\\\experienceAccordion\\\\ExperienceAccordion.js\";\nimport React, { Component } from \"react\";\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\nimport \"./ExperienceAccordion.css\";\nimport { Accordion, Panel } from \"baseui/accordion\";\nclass ExperienceAccordion extends Component {\n  render() {\n    const theme = this.props.theme;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"experience-accord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, this.props.sections.map(section => {\n      return /*#__PURE__*/React.createElement(Panel, {\n        className: \"accord-panel\",\n        title: section[\"title\"],\n        key: section[\"title\"],\n        overrides: {\n          Header: {\n            style: () => ({\n              backgroundColor: `${theme.body}`,\n              border: `1px solid ${theme.headerColor}`,\n              // Use shorthand for all border properties\n              borderRadius: `5px`,\n              marginBottom: `3px`,\n              fontFamily: \"Google Sans Regular\",\n              color: `${theme.text}`,\n              \":hover\": {\n                color: `${theme.secondaryText}`\n              }\n            })\n          },\n          Content: {\n            style: () => ({\n              backgroundColor: `${theme.body}`\n            })\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, section[\"experiences\"].map((experience, index) => {\n        return /*#__PURE__*/React.createElement(ExperienceCard, {\n          key: index // Use index as a key if experiences are unique within a section\n          ,\n          index: index,\n          totalCards: section[\"experiences\"].length,\n          experience: experience,\n          theme: theme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        });\n      }));\n    })));\n  }\n}\nexport default ExperienceAccordion;","map":{"version":3,"names":["React","Component","ExperienceCard","Accordion","Panel","ExperienceAccordion","render","theme","props","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sections","map","section","title","key","overrides","Header","style","backgroundColor","body","border","headerColor","borderRadius","marginBottom","fontFamily","color","text","secondaryText","Content","experience","index","totalCards","length"],"sources":["D:/projects/Portfolio/src/containers/experienceAccordion/ExperienceAccordion.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\r\nimport \"./ExperienceAccordion.css\";\r\nimport { Accordion, Panel } from \"baseui/accordion\";\r\n\r\nclass ExperienceAccordion extends Component {\r\n  render() {\r\n    const theme = this.props.theme;\r\n    return (\r\n      <div className=\"experience-accord\">\r\n        <Accordion>\r\n          {this.props.sections.map((section) => {\r\n            return (\r\n              <Panel\r\n                className=\"accord-panel\"\r\n                title={section[\"title\"]}\r\n                key={section[\"title\"]}\r\n                overrides={{\r\n                        Header: {\r\n                          style: () => ({\r\n                            backgroundColor: `${theme.body}`,\r\n                            border: `1px solid ${theme.headerColor}`, // Use shorthand for all border properties\r\n                            borderRadius: `5px`,\r\n                            marginBottom: `3px`,\r\n                            fontFamily: \"Google Sans Regular\",\r\n                            color: `${theme.text}`,\r\n                            \":hover\": {\r\n                              color: `${theme.secondaryText}`,\r\n                            },\r\n                          }),\r\n                        },\r\n                        Content: {\r\n                          style: () => ({\r\n                            backgroundColor: `${theme.body}`,\r\n                          }),\r\n                        },\r\n                      }}\r\n\r\n              >\r\n                {/* Add unique key here */}\r\n                {section[\"experiences\"].map((experience, index) => {\r\n                  return (\r\n                    <ExperienceCard \r\n                      key={index} // Use index as a key if experiences are unique within a section\r\n                      index={index} \r\n                      totalCards={section[\"experiences\"].length} \r\n                      experience={experience} \r\n                      theme={theme} \r\n                    />\r\n                  );\r\n                })}\r\n              </Panel>\r\n            );\r\n          })}\r\n        </Accordion>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExperienceAccordion;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,OAAO,2BAA2B;AAClC,SAASC,SAAS,EAAEC,KAAK,QAAQ,kBAAkB;AAEnD,MAAMC,mBAAmB,SAASJ,SAAS,CAAC;EAC1CK,MAAMA,CAAA,EAAG;IACP,MAAMC,KAAK,GAAG,IAAI,CAACC,KAAK,CAACD,KAAK;IAC9B,oBACEP,KAAA,CAAAS,aAAA;MAAKC,SAAS,EAAC,mBAAmB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChChB,KAAA,CAAAS,aAAA,CAACN,SAAS;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACP,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;MACpC,oBACEnB,KAAA,CAAAS,aAAA,CAACL,KAAK;QACJM,SAAS,EAAC,cAAc;QACxBU,KAAK,EAAED,OAAO,CAAC,OAAO,CAAE;QACxBE,GAAG,EAAEF,OAAO,CAAC,OAAO,CAAE;QACtBG,SAAS,EAAE;UACHC,MAAM,EAAE;YACNC,KAAK,EAAEA,CAAA,MAAO;cACZC,eAAe,EAAG,GAAElB,KAAK,CAACmB,IAAK,EAAC;cAChCC,MAAM,EAAG,aAAYpB,KAAK,CAACqB,WAAY,EAAC;cAAE;cAC1CC,YAAY,EAAG,KAAI;cACnBC,YAAY,EAAG,KAAI;cACnBC,UAAU,EAAE,qBAAqB;cACjCC,KAAK,EAAG,GAAEzB,KAAK,CAAC0B,IAAK,EAAC;cACtB,QAAQ,EAAE;gBACRD,KAAK,EAAG,GAAEzB,KAAK,CAAC2B,aAAc;cAChC;YACF,CAAC;UACH,CAAC;UACDC,OAAO,EAAE;YACPX,KAAK,EAAEA,CAAA,MAAO;cACZC,eAAe,EAAG,GAAElB,KAAK,CAACmB,IAAK;YACjC,CAAC;UACH;QACF,CAAE;QAAAf,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAIPG,OAAO,CAAC,aAAa,CAAC,CAACD,GAAG,CAAC,CAACkB,UAAU,EAAEC,KAAK,KAAK;QACjD,oBACErC,KAAA,CAAAS,aAAA,CAACP,cAAc;UACbmB,GAAG,EAAEgB,KAAM,CAAC;UAAA;UACZA,KAAK,EAAEA,KAAM;UACbC,UAAU,EAAEnB,OAAO,CAAC,aAAa,CAAC,CAACoB,MAAO;UAC1CH,UAAU,EAAEA,UAAW;UACvB7B,KAAK,EAAEA,KAAM;UAAAI,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CACd,CAAC;MAEN,CAAC,CACI,CAAC;IAEZ,CAAC,CACQ,CACR,CAAC;EAEV;AACF;AAEA,eAAeX,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}